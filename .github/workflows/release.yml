# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Release

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  build:
    if: |
      github.event.pull_request.merged == true && github.event.pull_request.head.ref ==
      'bot_release' && startsWith(github.event.pull_request.title, 'chore(release)')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: 'https://registry.npmjs.org'
          scope: '@binancechain'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: yarn lerna bootstrap
      - run: yarn lint && yarn test --ci --coverage --maxWorkers=4
      # - run: yarn build

      - run: yarn lerna publish from-package -y
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Current Version
        run: |
          version=$(node -p 'require("./lerna.json").version')
          git tag v${version}
          echo "CURRENT_VERSION=${version}" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.CURRENT_VERSION }}
          release_name: v${{ env.CURRENT_VERSION }}
          body: |
            ${{ github.event.pull_request.body }}
